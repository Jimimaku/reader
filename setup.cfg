[metadata]
name = reader
version = attr: reader.__version__
author = lemon24
description = A Python feed reader library.
long_description = file: README.rst
long_description_content_type = text/x-rst
url = https://github.com/lemon24/reader
license = BSD-3-Clause
project_urls =
    Changes = https://reader.readthedocs.io/en/latest/changelog.html
    Documentation = https://reader.readthedocs.io/
    Issue tracker = https://github.com/lemon24/reader/issues
    Source Code = https://github.com/lemon24/reader
classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Environment :: Web Environment
    Intended Audience :: Developers
    Intended Audience :: End Users/Desktop
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: Python
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: Implementation :: CPython
    Programming Language :: Python :: Implementation :: PyPy
    Topic :: Internet
    Topic :: Internet :: WWW/HTTP :: Dynamic Content :: News/Diary
    Topic :: Internet :: WWW/HTTP :: Indexing/Search
    Topic :: Internet :: WWW/HTTP :: WSGI :: Application
    Topic :: Software Development :: Libraries
    Topic :: Utilities
    Typing :: Typed

keywords = atom, cdf, feed, rdf, rss, json feed, web feed, podcast, feed reader, feed aggregator, twitter

[options]
packages = find_namespace:
package_dir = = src
include_package_data = true
python_requires = >=3.9

install_requires =
    typing-extensions>=4
    feedparser>=6
    requests>=2.18
    # for JSON Feed date parsing
    iso8601>=1
    # search
    beautifulsoup4>=4.5

[options.packages.find]
where = src

[options.extras_require]

# STABLE

search =
    # empty since 2.4, kept to avoid breaking dependents

readtime =
    # empty since 3.1, kept to avoid breaking dependents

# UNSTABLE

cli =
    click>=7
    # for config
    PyYAML
app =
    flask>=0.10
    # https://github.com/python-humanize/humanize/issues/122
    humanize>=4,!=4.7.*
    # for config
    PyYAML

# UNSTABLE PLUGINS

# mushed together for convenience
unstable-plugins =

    # enclosure-tags
    requests
    mutagen

    # preview-feed-list
    requests
    beautifulsoup4
    blinker>=1.4

    # sqlite-releases
    beautifulsoup4

    # twitter
    tweepy
    Jinja2>=3

# DEVELOPMENT

# run tests under one interpreter
tests =
    pytest>=4
    pytest-randomly
    pytest-subtests
    flaky
    coverage
    pytest-cov
    requests-mock
    # mechanicalsoup hard-depends on lxml (see below)
    mechanicalsoup; (implementation_name != "pypy" or python_version <= "3.9")
    requests-wsgi-adapter
    # we want to test search with all known bs4 parsers.
    # lxml does not have a PyPy 3.10+ wheel.
    lxml; (implementation_name != "pypy" or python_version <= "3.9")
    html5lib
    # for _http_utils tests
    werkzeug
    # mypy does not work on pypy (yet).
    mypy; implementation_name != "pypy"
    types-requests

# build docs
docs =
    sphinx
    sphinx-rtd-theme
    click>=7
    sphinx-click
    sphinx-issues
    sphinx-hoverxref
    sphinxcontrib-log-cabinet
    # for read_configuration used in conf.py
    setuptools

# things needed to develop / test locally / make releases
dev =
    reader[cli,app,unstable-plugins,tests,docs]
    tox
    pre-commit
    build
    twine


[tool:pytest]
markers =
    slow: mark a test as slow.
    requires_lxml: mark a test to only run in places where we have lxml.
    apptest: mark a test as a web app test (skipped sometimes).
addopts = --no-success-flaky-report
filterwarnings =
    ignore:No parser was explicitly specified::reader._html_utils
testpaths = tests


[coverage:run]
branch = true
source =
    reader
    tests
omit =
    src/reader/_vendor/*

[coverage:paths]
source =
    src
    */site-packages


[flake8]
# B = bugbear
# E = pycodestyle errors
# F = flake8 pyflakes
# W = pycodestyle warnings
# B9 = bugbear opinions
select = B, E, F, W, B9
ignore =
    # slice notation whitespace, invalid
    E203
    # line length, handled by bugbear B950
    E501
    # bugbear line length; too sensitive, triggered for comments
    # and docstrings (and adding "noqa" in comments is making things worse);
    # black taking care of line length for code should be good enough;
    # if enabled, we should set max-line-length = 80 (so up to 88 are allowed)
    B950
    # bare except, handled by bugbear B001
    E722
    # bin op line break, invalid
    W503
    # mistakenly triggered for @overload;
    # https://github.com/PyCQA/pyflakes/issues/320 says it should be fixed
    # in 2.1.1, but it doesn't seem to be (it's fixed in master though)
    F811
    # require zip(..., strict=True), was added in Python 3.10
    B905
per-file-ignores =
    # __init__ modules export names
    **/__init__.py: F401
exclude = tests/*, docs/*, scripts/*, src/reader/_vendor/*


[mypy]
# empty section required in 0.800; https://github.com/python/mypy/issues/9940
[mypy-reader.__main__]
ignore_errors = True
[mypy-reader._cli]
ignore_errors = True
[mypy-reader._config]
ignore_errors = True
[mypy-reader._app]
ignore_errors = True
[mypy-reader._app.*]
ignore_errors = True
[mypy-reader._plugins.*]
ignore_errors = True
[mypy-reader.plugins.*]
ignore_errors = True
[mypy-reader._vendor.feedparser.*]
ignore_errors = True
